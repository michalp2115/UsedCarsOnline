@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item align-self-center">
            <div class="dropdown">
                <a class="nav-link text-white dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Your Account
                </a>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Details</a>
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="dropdown-item">Logout</button>
                    </form>
                    <a class="dropdown-item" asp-controller="Auction" asp-action="MyAuctions" title="Manage">My Auctions</a>
                </div>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
